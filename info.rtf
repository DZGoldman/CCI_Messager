{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 App Secrets:
\b0 \
\
The file is for your account's private information.\
\

\i key:
\i0  The is the API Key,  a roughly 24 character string you should have received in the sign-up process for Whispir.\
\

\i email/password:
\i0  This is for the email you would like the notifications to be sent from.\
\

\i user/whispir_password
\i0 : This is the username and password for your whispir account (the same username and password you use to log in to the website.)\
\
\

\b Command line inputs:
\b0 \
\
The command line inputs are set in the info.py file. The command line in arguments (after python main.py) are as follows:\
\
1st (string): ID of template on the Whisipr API.\
\
2nd (list of strings): Email addresses to receive notification email.\
\
3rd (string): Name of new CSV file to be created\
\
See the inputs.py file for examples. Additional variables for any of the 3 arguments can be added to that file; just make sure each of the command line arguments corresponds to a variable in inputs.py when the application is run.\
\
Also In the inputs.py file, set the imported_file_path variable as the path of the file to be imported (you may use the path_prefix variable for the path to the project's root directory.)\
\
\

\b Development/Expansion:
\b0 \
\
For further development, modifications can be made to main.py, or procedures that follow the same basic template can be created in new files. Some notes:\
\
- The column variable strings should correspond to columns in the imported CSV column; not all columns in the original file need to be named explicitly, only ones your are interested in using.\
\
- The transform_columns function is the key higher level function, which will apply a lower level function to the data on the column(s) you target.\
\
- The lower level functions are defined in the data functions file; this is the other file where modifications would likely be made.\
\
- The filter_out_rows method is currently only used once; however, it may be used as many times as necessary if you require more data to be filtered/removed. \
\
- The methods in the Functions directory are tested directly, so modifying main.py or creating a new procedure shouldn't cause any of the tests to fail.\
\
\
\
\
\
}